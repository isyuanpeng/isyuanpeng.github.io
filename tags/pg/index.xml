<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Pg on Isyuanpeng</title>
    <link>https://isyuanpeng.github.io/tags/pg/</link>
    <description>Recent content in Pg on Isyuanpeng</description>
    <image>
      <url>https://isyuanpeng.github.io/papermod-cover.png</url>
      <link>https://isyuanpeng.github.io/papermod-cover.png</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Wed, 02 Mar 2022 19:09:58 +0800</lastBuildDate><atom:link href="https://isyuanpeng.github.io/tags/pg/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Pg数据库常用SQL(持续更新)</title>
      <link>https://isyuanpeng.github.io/posts/tech/pg-common-sql/</link>
      <pubDate>Wed, 02 Mar 2022 19:09:58 +0800</pubDate>
      
      <guid>https://isyuanpeng.github.io/posts/tech/pg-common-sql/</guid>
      <description>&lt;h2 id=&#34;普通操作&#34;&gt;普通操作&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;更新多参数SQL&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;update table_a a set (col_a, col_b) = (select b.col_a, b.col_b from table_b b where a.col_c = b.col_c) where exists (select 1 from table_b b where a.col_c = b.col_c)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;分组排序&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;select * from (select *, row_number() over(partition by col_a order by col_b) rn from table_a) t where rn = 1;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;分组排序删除&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;delete from table_a where id in (select id from (select id, row_number() over(partition by col_a order by col_b) rn from table_a) t where rn != 1);
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;系统类&#34;&gt;系统类&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;查看当前所有连接，连接个数&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;5
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;select * from pg_stat_activity;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;select count(1) from pg_stat_activity;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;# 查询最大连接数
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;show max_connections;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>记一次数据库膨胀问题的解决过程</title>
      <link>https://isyuanpeng.github.io/posts/question/%E8%AE%B0%E4%B8%80%E6%AC%A1%E6%95%B0%E6%8D%AE%E5%BA%93%E8%86%A8%E8%83%80%E9%97%AE%E9%A2%98%E7%9A%84%E8%A7%A3%E5%86%B3%E8%BF%87%E7%A8%8B/</link>
      <pubDate>Fri, 25 Feb 2022 13:44:17 +0800</pubDate>
      
      <guid>https://isyuanpeng.github.io/posts/question/%E8%AE%B0%E4%B8%80%E6%AC%A1%E6%95%B0%E6%8D%AE%E5%BA%93%E8%86%A8%E8%83%80%E9%97%AE%E9%A2%98%E7%9A%84%E8%A7%A3%E5%86%B3%E8%BF%87%E7%A8%8B/</guid>
      <description>&lt;h2 id=&#34;问题描述&#34;&gt;问题描述&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;表中记录了图片的base64&lt;/li&gt;
&lt;li&gt;表大概有200w数据&lt;/li&gt;
&lt;li&gt;占用了300G左右的空间&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;问题解决&#34;&gt;问题解决&lt;/h2&gt;
&lt;p&gt;查询了wiki和咨询了总部的pg数据库的同事得知了pg数据库存在膨胀的问题，即垃圾清理问题。所以及时删除了数据，空间也不会得到释放，只有手动进行垃圾清理后空间才能够得到释放，所以根据总部同事提供的排查方案，首先进行数据膨胀的排查。&lt;/p&gt;
&lt;h3 id=&#34;pg数据库膨胀的问题排查&#34;&gt;pg数据库膨胀的问题排查&lt;/h3&gt;
&lt;p&gt;通过排查后发现，真正大的表是pg_toast_oid表，并且根据排查也发现其dead_tup比较大，实际上这是pg数据库存储大型数据的逻辑toast，后面知识点归纳也会提到这一点。pg_toast_oid表我们分析可知为表中的base64图片的压缩切片存储。&lt;/p&gt;
&lt;h3 id=&#34;解决方案&#34;&gt;解决方案&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;大数据量的表VACUUM FULL很慢并且会锁表(VACUUM FULL的原理是复制新表，然后删除旧表)，所以直接在业务空闲期进行表的删除和重建。（由于数据已经实时的推送给了三方，在中间数据库中也有数据存储，所以这里没有进行备份，选择了直接删除。删除的时候对于这种大数据的表要进行批量删除，先将部分数据删除，然后在删除整个表，避免长时间的执行删除命令导致业务中断的时间过长。）
&lt;ul&gt;
&lt;li&gt;引申出来的一点关于数据库操作的建议：尽量避免长连接的操作，如果数据库的并发量比较高，长连接一直占用，将会导致数据库连接不够用，从而产生报错。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;后续的过程中删除保留时间过长的数据，并且执行VACUUM FULL命令(kettle流程深夜执行)&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;此问题产生的思考&#34;&gt;此问题产生的思考&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;BASE64的图片不要存库。选择图片存储地址等方案。&lt;/li&gt;
&lt;li&gt;所有的东西设计之初就要想好，并且日后有优化的想法时第一时间优化。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;知识点总结归纳&#34;&gt;知识点总结归纳&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://juejin.cn/post/7016165148020703246&#34;&gt;https://juejin.cn/post/7016165148020703246&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;事务特性-acid&#34;&gt;事务特性-ACID&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;原子性（Atomicity）：对数据库的操作要么执行，要么不执行。&lt;/li&gt;
&lt;li&gt;一致性（Consistency）：不管操作是否执行，数据保持不变。&lt;/li&gt;
&lt;li&gt;隔离性（Isolation）：多个事务并发访问，相互隔离。&lt;/li&gt;
&lt;li&gt;持久性（Durability）：事务操作完成后，将永久保存。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;事务并发产生的问题&#34;&gt;事务并发产生的问题&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;脏读: 一个事务读取到了另一个未提交事务修改过的数据&lt;/li&gt;
&lt;li&gt;不可重复读：同一个事务内，前后多次读取，读取到的数据内容不一致&lt;/li&gt;
&lt;li&gt;幻读: 如果一个事务先根据某些搜索条件查询出一些记录，在该事务未提交时，另一个事务写入了一些符合那些搜索条件的记录（如insert、delete、update），就意味着发生了幻读。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;mvcc-multi-version-concurrency-control&#34;&gt;MVCC-Multi-Version Concurrency Control&lt;/h3&gt;
&lt;p&gt;Multi-Version Concurrency Control，多版本并发控制&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;通俗的讲，数据库中同时存在多个版本的数据，并不是整个数据库的多个版本，而是某一条记录的多个版本同时存在，在某个事务对其进行操作的时候，需要查看这一条记录的隐藏列事务版本id，比对事务id并根据事物隔离级别去判断读取哪个版本的数据。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;mvcc实现的关键点&#34;&gt;MVCC实现的关键点&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;事务版本号：&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;事务每次开启前，都会从数据库获得一个自增长的事务ID，可以从事务ID判断事务的执行先后顺序。这就是事务版本号。
+ 有关版本号的经验和思考：
版本号多用于控制并发，常用于乐观锁来解决并发问题，如MySQL的乐观锁解决并发。其基本做法是在数据库的表中引入版本的字段(version)，数据每进行一次更新，version+1，当提交更新的时候，比对版本号+1是否相等，不相等则认为当前数据是过期数据。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;
&lt;p&gt;隐式字段：以MySQL为例，InnoDB存储引擎&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;trx_id: 记录操作数据事务的事务id&lt;/li&gt;
&lt;li&gt;roll_pointer: 指针，指向回滚的undo日志&lt;/li&gt;
&lt;li&gt;row_id: 如果没主键和非NULL惟一键，有该主键列&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;undo log: 回滚日志&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;版本链：通过roll_pointer来指向undo_log&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;快照读和当前读：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;快照读：读的是记录数据的可见版本&lt;/li&gt;
&lt;li&gt;当前读：读的是记录数据的最新版本&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;ReadView：事务执行SQL时产生的读视图&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;postgresql-toast&#34;&gt;PostgreSQL toast&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://zhmin.github.io/posts/postgresql-toast/&#34;&gt;https://zhmin.github.io/posts/postgresql-toast/&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;toast说白了就是为了存储大型数据，表中的某个列的数据如果过大，则压缩，切分，放到toast表中，在之前问题的排查中，也可以看到真正数据量大的并不是数据存储的本表，而是pg_toast_oid表。&lt;/p&gt;
&lt;h3 id=&#34;postgresql-vacuum&#34;&gt;PostgreSQL VACUUM&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://www.cnblogs.com/dbadaily/p/vacuum1.html&#34;&gt;https://www.cnblogs.com/dbadaily/p/vacuum1.html&lt;/a&gt;
&lt;a href=&#34;https://www.cnblogs.com/dbadaily/p/vacuum2.html&#34;&gt;https://www.cnblogs.com/dbadaily/p/vacuum2.html&lt;/a&gt;
&lt;a href=&#34;https://www.cnblogs.com/dbadaily/p/vacuum3.html&#34;&gt;https://www.cnblogs.com/dbadaily/p/vacuum3.html&lt;/a&gt;
&lt;a href=&#34;https://www.cnblogs.com/dbadaily/p/vacuum4.html&#34;&gt;https://www.cnblogs.com/dbadaily/p/vacuum4.html&lt;/a&gt;
&lt;a href=&#34;https://www.cnblogs.com/dbadaily/p/vacuum5.html&#34;&gt;https://www.cnblogs.com/dbadaily/p/vacuum5.html&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;推荐阅读我没读&#34;&gt;推荐阅读（我没读）&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://www.interdb.jp/pg/&#34;&gt;https://www.interdb.jp/pg/&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</description>
    </item>
    
  </channel>
</rss>
